---
- name: Pull sources from the repository.
  git: repo=${project_repo} dest=${project_root}/code/ version=${branch}
  sudo_user: ${deployment_name}
  register: git
  when: mode != 'local'
  tags:
    - deploy
    - clone

- name: Upgrade the Virtualenv.
  pip: requirements="{{project_root}}/code${etc_path}/requirements.txt" virtualenv=${project_root}/venv/
  sudo_user: ${deployment_name}
  register: venv
  tags:
    - deploy

- name: Install Django settings file.
  template: src="local_settings.{{mode}}.py.j2" dest=${project_root}/code${code_root}local_settings.py
  sudo_user: ${deployment_name}
  register: settings_file
  tags:
    - deploy

- name: Sync Django database.
  shell: ${project_root}/venv/bin/python ${project_root}/code/manage.py syncdb --noinput --settings={{settings_path}} --pythonpath=${project_root}/code/
  sudo_user: ${deployment_name}
  when: settings_file.changed or venv.changed or git.changed
  tags:
    - deploy

- name: Migrate Django database.
  shell: ${project_root}/venv/bin/python ${project_root}/code/manage.py migrate --fake --delete-ghost-migrations --settings={{settings_path}} --pythonpath=${project_root}/code/
  sudo_user: ${deployment_name}
  when: settings_file.changed or venv.changed or git.changed
  tags:
    - deploy

- name: Generate Django media.
  shell: ${project_root}/venv/bin/python ${project_root}/code/manage.py collectstatic --noinput --settings={{settings_path}} --pythonpath=${project_root}/code/
  sudo_user: ${deployment_name}
  when: collectstatic
  tags:
    - deploy

- name: Restart Supervisor
  supervisorctl: name={{deployment_name}} state=restarted 
  tags:
    - deploy
